{"version":3,"sources":["context/ConfigurationContext.js","components/ConfigurationController/index.js","components/Body/index.js","components/Header/index.js","components/Footer/index.js","components/Layout/index.js","App.js","index.js"],"names":["ConfigurationContext","React","createContext","showContent","showLeftNavbar","showRightNavbar","onToggleShowContent","onToggleShowLeftNavbar","onToggleShowRightNavbar","ConfigurationController","_jsx","Consumer","children","value","_jsxs","className","id","type","checked","onChange","event","target","htmlFor","Body","Header","Footer","Layout","App","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","setState","preState","_inherits","_createClass","key","_this$state","this","Provider","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84a45579.chunk.js","sourcesContent":["import React from 'react'\n\nconst ConfigurationContext = React.createContext({\n  showContent: true,\n  showLeftNavbar: true,\n  showRightNavbar: true,\n  onToggleShowContent: () => {},\n  onToggleShowLeftNavbar: () => {},\n  onToggleShowRightNavbar: () => {},\n})\n\nexport default ConfigurationContext\n","// Write your code here\nimport ConfigurationContext from '../../context/ConfigurationContext'\nimport './index.css'\n\nconst ConfigurationController = () => (\n  <ConfigurationContext.Consumer>\n    {value => {\n      const {\n        showContent,\n        showLeftNavbar,\n        showRightNavbar,\n        onToggleShowContent,\n        onToggleShowLeftNavbar,\n        onToggleShowRightNavbar,\n      } = value\n      const onChangeContent = event => {\n        onToggleShowContent(event.target.value)\n      }\n      const onChangeLeft = event => {\n        onToggleShowLeftNavbar(event.target.value)\n      }\n\n      const onChangeRight = event => {\n        onToggleShowRightNavbar(event.target.value)\n      }\n\n      return (\n        <div className=\"configuration-context-con\">\n          <h1 className=\"layout-heading\">Layout</h1>\n          <div className=\"checkbox-container\">\n            <div className=\"content-checkbox-con\">\n              <input\n                id=\"content\"\n                className=\"input\"\n                type=\"checkbox\"\n                checked={showContent}\n                onChange={onChangeContent}\n              />\n              <label htmlFor=\"content\" className=\"label\">\n                Content\n              </label>\n            </div>\n            <div className=\"content-checkbox-con\">\n              <input\n                id=\"left\"\n                className=\"input\"\n                type=\"checkbox\"\n                checked={showLeftNavbar}\n                onChange={onChangeLeft}\n              />\n              <label htmlFor=\"left\" className=\"label\">\n                Left Navbar\n              </label>\n            </div>\n            <div className=\"content-checkbox-con\">\n              <input\n                id=\"right\"\n                className=\"input\"\n                type=\"checkbox\"\n                checked={showRightNavbar}\n                onChange={onChangeRight}\n              />\n              <label htmlFor=\"right\" className=\"label\">\n                Right Navbar\n              </label>\n            </div>\n          </div>\n        </div>\n      )\n    }}\n  </ConfigurationContext.Consumer>\n)\nexport default ConfigurationController\n","// Write your code here\nimport ConfigurationContext from '../../context/ConfigurationContext'\nimport './index.css'\n\nconst Body = () => (\n  <ConfigurationContext.Consumer>\n    {value => {\n      const {showContent, showLeftNavbar, showRightNavbar} = value\n      return (\n        <div className=\"body-con\">\n          {showLeftNavbar ? (\n            <div className=\"left-navbar-con\">\n              <h1 className=\"left-nav-heading\">Left Navbar Menu</h1>\n              <ul className=\"unordered-list\">\n                <li className=\"list\">Item 1</li>\n                <li className=\"list\">Item 2</li>\n                <li className=\"list\">Item 3</li>\n                <li className=\"list\">Item 4</li>\n              </ul>\n            </div>\n          ) : null}\n          {showContent ? (\n            <div className=\"content-con\">\n              <h1 className=\"left-nav-heading\">Content</h1>\n              <p className=\"description\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, send do\n                elusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n                enim ad minim venlam.\n              </p>\n            </div>\n          ) : null}\n          {showRightNavbar ? (\n            <div className=\"left-navbar-con\">\n              <h1 className=\"left-nav-heading\">Right Navbar</h1>\n              <div className=\"box-con\">\n                <p className=\"ad-para\">Ad 1</p>\n                <p className=\"ad-para\">Ad 2</p>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      )\n    }}\n  </ConfigurationContext.Consumer>\n)\nexport default Body\n","// Write your code here\nimport './index.css'\n\nconst Header = () => (\n  <div className=\"header-container\">\n    <h1 className=\"header\">Header</h1>\n  </div>\n)\nexport default Header\n","// Write your code here\nimport './index.css'\n\nconst Footer = () => (\n  <div className=\"header-container\">\n    <h1 className=\"header\">Footer</h1>\n  </div>\n)\nexport default Footer\n","// Write your code here\nimport Body from '../Body'\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport './index.css'\n\nconst Layout = () => (\n  <div className=\"layout-container\">\n    <Header />\n    <Body />\n    <Footer />\n  </div>\n)\nexport default Layout\n","import {Component} from 'react'\n\nimport ConfigurationController from './components/ConfigurationController'\n\nimport Layout from './components/Layout'\nimport ConfigurationContext from './context/ConfigurationContext'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {showContent: true, showLeftNavbar: true, showRightNavbar: true}\n\n  onToggleShowContent = () => {\n    this.setState(preState => ({showContent: !preState.showContent}))\n  }\n\n  onToggleShowLeftNavbar = () => {\n    this.setState(preState => ({showLeftNavbar: !preState.showLeftNavbar}))\n  }\n\n  onToggleShowRightNavbar = () => {\n    this.setState(preState => ({showRightNavbar: !preState.showRightNavbar}))\n  }\n\n  render() {\n    const {showContent, showLeftNavbar, showRightNavbar} = this.state\n    return (\n      <ConfigurationContext.Provider\n        value={{\n          showContent,\n          showLeftNavbar,\n          showRightNavbar,\n          onToggleShowContent: this.onToggleShowContent,\n          onToggleShowLeftNavbar: this.onToggleShowLeftNavbar,\n          onToggleShowRightNavbar: this.onToggleShowRightNavbar,\n        }}\n      >\n        <ConfigurationController />\n        <Layout />\n      </ConfigurationContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}